/*
 * This file is generated by jOOQ.
 */
package org.jooq.generated.tables.daos;


import java.util.List;
import java.util.Optional;

import org.jooq.Configuration;
import org.jooq.generated.tables.JUser;
import org.jooq.generated.tables.pojos.User;
import org.jooq.generated.tables.records.UserRecord;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserDao extends DAOImpl<UserRecord, User, Integer> {

    /**
     * Create a new UserDao without any configuration
     */
    public UserDao() {
        super(JUser.USER, User.class);
    }

    /**
     * Create a new UserDao with an attached configuration
     */
    public UserDao(Configuration configuration) {
        super(JUser.USER, User.class, configuration);
    }

    @Override
    public Integer getId(User object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<User> fetchRangeOfJId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(JUser.USER.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<User> fetchByJId(Integer... values) {
        return fetch(JUser.USER.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public User fetchOneByJId(Integer value) {
        return fetchOne(JUser.USER.ID, value);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public Optional<User> fetchOptionalByJId(Integer value) {
        return fetchOptional(JUser.USER.ID, value);
    }
}
